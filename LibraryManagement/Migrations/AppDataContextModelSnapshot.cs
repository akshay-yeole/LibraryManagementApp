// <auto-generated />
using LibraryManagement.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LibraryManagement.Migrations
{
    [DbContext(typeof(AppDataContext))]
    partial class AppDataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.27")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("LibraryManagement.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("BookId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Author")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("CopiesAvailable")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "Shirley Jackson",
                            CategoryId = 1,
                            CopiesAvailable = 10,
                            Name = "The Haunting Of Hill House"
                        },
                        new
                        {
                            Id = 2,
                            Author = "Anne Rivers Siddons",
                            CategoryId = 1,
                            CopiesAvailable = 7,
                            Name = "The House Next Door"
                        },
                        new
                        {
                            Id = 3,
                            Author = "Shirley Jackson",
                            CategoryId = 1,
                            CopiesAvailable = 10,
                            Name = "Lunar Park"
                        },
                        new
                        {
                            Id = 4,
                            Author = "Miguel de Cervantes",
                            CategoryId = 1,
                            CopiesAvailable = 9,
                            Name = "Don Quixote"
                        },
                        new
                        {
                            Id = 5,
                            Author = "Walter Scott",
                            CategoryId = 2,
                            CopiesAvailable = 12,
                            Name = "Ivanhoe "
                        },
                        new
                        {
                            Id = 6,
                            Author = "Harry",
                            CategoryId = 2,
                            CopiesAvailable = 18,
                            Name = "King Solomon's Mines"
                        },
                        new
                        {
                            Id = 7,
                            Author = "Jules Verne",
                            CategoryId = 2,
                            CopiesAvailable = 14,
                            Name = "Journey to the Center of the Earth"
                        },
                        new
                        {
                            Id = 8,
                            Author = "Gillian Flynn",
                            CategoryId = 2,
                            CopiesAvailable = 23,
                            Name = "Gone Girl"
                        },
                        new
                        {
                            Id = 9,
                            Author = "Robert Traver",
                            CategoryId = 2,
                            CopiesAvailable = 23,
                            Name = "Anatomy of a Murder"
                        },
                        new
                        {
                            Id = 10,
                            Author = "Truman Capote",
                            CategoryId = 3,
                            CopiesAvailable = 3,
                            Name = "In Cold Blood"
                        });
                });

            modelBuilder.Entity("LibraryManagement.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CategoryId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Horror"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Action and Adventure"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Classics"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Comic Book"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Detective and Mystery"
                        });
                });

            modelBuilder.Entity("LibraryManagement.Models.Student", b =>
                {
                    b.Property<int>("Std")
                        .HasColumnType("int");

                    b.Property<string>("Div")
                        .HasColumnType("nvarchar(1)");

                    b.Property<int>("Rollno")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Std", "Div", "Rollno");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Std = 8,
                            Div = "A",
                            Rollno = 47,
                            Address = "CA",
                            Name = "John"
                        },
                        new
                        {
                            Std = 7,
                            Div = "B",
                            Rollno = 12,
                            Address = "FL",
                            Name = "Amber Heard"
                        },
                        new
                        {
                            Std = 4,
                            Div = "C",
                            Rollno = 1,
                            Address = "NY",
                            Name = "Camile"
                        });
                });

            modelBuilder.Entity("LibraryManagement.Models.Book", b =>
                {
                    b.HasOne("LibraryManagement.Models.Category", "Category")
                        .WithMany("Books")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
